// <auto-generated />
using System;
using Assignment1_EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assignment1_EFCore.FMigration
{
    [DbContext(typeof(itiDBContext))]
    [Migration("20250301145303_InstructorDepartmentv01")]
    partial class InstructorDepartmentv01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Assignment1_EFCore.Course", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("Duration")
                        .HasColumnType("time");

                    b.Property<int>("Topicid")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Topicid");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Assignment1_EFCore.Course_Inst", b =>
                {
                    b.Property<int>("inst_id")
                        .HasColumnType("int");

                    b.Property<int>("course_id")
                        .HasColumnType("int");

                    b.Property<decimal?>("evaluate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("inst_id", "course_id");

                    b.ToTable("Course_Insts");
                });

            modelBuilder.Entity("Assignment1_EFCore.Department", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateOnly>("HiringDate")
                        .HasColumnType("date");

                    b.Property<int?>("Instructorid")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Instructorid")
                        .IsUnique()
                        .HasFilter("[Instructorid] IS NOT NULL");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("Assignment1_EFCore.Instructor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<decimal>("Bonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Dept_id")
                        .HasColumnType("int");

                    b.Property<decimal>("HourRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Dept_id");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("Assignment1_EFCore.Stud_Course", b =>
                {
                    b.Property<int>("stud_id")
                        .HasColumnType("int");

                    b.Property<int>("course_id")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("stud_id", "course_id");

                    b.ToTable("Stud_Courses");
                });

            modelBuilder.Entity("Assignment1_EFCore.Student", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Age")
                        .HasColumnType("smallint");

                    b.Property<int>("Departmentid")
                        .HasColumnType("int");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Departmentid");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Assignment1_EFCore.Topic", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("Assignment1_EFCore.Course", b =>
                {
                    b.HasOne("Assignment1_EFCore.Topic", "Topic")
                        .WithMany("Courses")
                        .HasForeignKey("Topicid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("Assignment1_EFCore.Department", b =>
                {
                    b.HasOne("Assignment1_EFCore.Instructor", "Manager")
                        .WithOne("ManagedDepartment")
                        .HasForeignKey("Assignment1_EFCore.Department", "Instructorid")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Assignment1_EFCore.Instructor", b =>
                {
                    b.HasOne("Assignment1_EFCore.Department", "Department")
                        .WithMany("Instructors")
                        .HasForeignKey("Dept_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Assignment1_EFCore.Student", b =>
                {
                    b.HasOne("Assignment1_EFCore.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("Departmentid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Assignment1_EFCore.Department", b =>
                {
                    b.Navigation("Instructors");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Assignment1_EFCore.Instructor", b =>
                {
                    b.Navigation("ManagedDepartment")
                        .IsRequired();
                });

            modelBuilder.Entity("Assignment1_EFCore.Topic", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
